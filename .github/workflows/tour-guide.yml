name: sight-sound-tour

on:
  workflow_dispatch:
  push:
    branches: [ main, dev, feature/** ]
    paths:
      - 'sight-sound-tour/**'

env:
  RG_NAME: rg-sight-sound-dev
  LOCATION: eastus

jobs:
  infra:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Ensure resource group
        run: |
          az group create -n $RG_NAME -l $LOCATION

      - name: Deploy Bicep
        id: bicep
        run: |
          az deployment group create \
            --resource-group $RG_NAME \
            --template-file sight-sound-tour/infra/main.bicep \
            --parameters @sight-sound-tour/infra/parameters.dev.json \
            --query 'properties.outputs' -o json > outputs.json
          cat outputs.json

      - name: Parse outputs
        id: parse
        run: |
          FN_PRINCIPAL_ID=$(jq -r '.functionPrincipalId.value' outputs.json)
          VISION_ID=$(jq -r '.visionId.value' outputs.json)
          TRANS_ID=$(jq -r '.translatorId.value' outputs.json)
          SPEECH_ID=$(jq -r '.speechId.value' outputs.json)
          FN_NAME=$(jq -r '.functionName.value' outputs.json)
          echo "FN_PRINCIPAL_ID=$FN_PRINCIPAL_ID" >> $GITHUB_ENV
          echo "VISION_ID=$VISION_ID" >> $GITHUB_ENV
          echo "TRANS_ID=$TRANS_ID" >> $GITHUB_ENV
          echo "SPEECH_ID=$SPEECH_ID" >> $GITHUB_ENV
          echo "FN_NAME=$FN_NAME" >> $GITHUB_ENV

      - name: Grant RBAC (Cognitive Services User)
        run: |
          for SCOPE in "$VISION_ID" "$TRANS_ID" "$SPEECH_ID"; do
            az role assignment create --assignee $FN_PRINCIPAL_ID --role "Cognitive Services User" --scope "$SCOPE" || true
          done

  api:
    needs: infra
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build & Deploy Functions
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.FN_NAME }}
          package: sight-sound-tour/api
